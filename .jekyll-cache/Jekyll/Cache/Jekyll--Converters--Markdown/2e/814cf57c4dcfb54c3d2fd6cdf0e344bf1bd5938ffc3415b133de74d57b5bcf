I"æ<p><img src="https://www.hdwallpapers.in/walls/mr_robot_hd_4k_8k-HD.jpg" alt="mr-robot" /></p>

<p>Hello Guys!
Today we will discuss the Mr.Robot CTF on TryHackMe.com
The Room was Simple and Fun. It contained a Wordpress Website, the Goal was to Root the System.</p>

<p>URL: <a href="https://tryhackme.com/room/mrrobot">Mr Robot CTF</a></p>

<p>Difficulty: Easy</p>

<p>Author: <a href="https://tryhackme.com/p/ben">Ben</a></p>

<p>The first Step is to Enumerate the System. Below we see the Nmap Scan Results.
<img src="https://cdn.discordapp.com/attachments/723180241140318278/732637299380322304/unknown.png" alt="nmap-scan" /></p>

<p>As we can see, the Port 80 is open and assigned to a Web-Server. As we check out the Website,
we get a Mr.Robot themed Terminal, it appears to be a rabbit Hole.
<img src="https://cdn.discordapp.com/attachments/723180241140318278/732638395393900554/unknown.png" alt="mrorobotsite" /></p>

<p>Since we got a Website, I ran Gobuster with the ‚Äú/usr/share/wordlists/dirb/common.txt‚Äù wordlist against the
Site. Here were all the Results I got:
<img src="https://cdn.discordapp.com/attachments/723180241140318278/732642289565958225/unknown.png" alt="gobuster" /></p>

<p>I got robots.txt as a Hit. The robots.txt, also known as the Robots Exlucion Standart Protocoll, is a Text-File which specify, which 
Directories can be readed and which not. The so called ‚ÄúCrawlers‚Äù from Web Browsers, always search for the 
robots.txt File when calling a Website, that way the Browsers know which Directories they are allowed to Display.</p>

<p>I got the Directory <strong>key-1-of-3.txt</strong> in the robots.txt File. In the Directory I found my First Key.
<img src="https://cdn.discordapp.com/attachments/723180241140318278/732640712604254228/unknown.png" alt="robots.txt" />
<img src="https://cdn.discordapp.com/attachments/723180241140318278/732640932029136946/unknown.png" alt="firstkey" /></p>

<p>As you may also saw, there was a /login Directory displayed on Gobuster. As we navigate to it,
we can see, its a Wordpress Website. 
<img src="https://cdn.discordapp.com/attachments/723180241140318278/732643118310228050/unknown.png" alt="wordpresslogin" /></p>

<p>I got a txt File from the Room before, it contained the Password. The File had a lot of Words in seperate Lines in it. All I had to do was to
use the Command <strong>uniq</strong> with the parameter <strong>-u</strong> to sort out the File. I got 8 Entrys left in the Output, one of them had to be the Password. The Password was
<strong>ER28-0652</strong>.
As we got no Username, we could either start a Dictionary Attack with common Usernames, start a Bruteforce Attack. As we know, this is a Mr. Robot based 
Room, so I tried Names from Characters. Turns out the Username was Elliot.</p>

<p>We now successfully gained access to the WordPress Panel. <br />
<img src="https://cdn.discordapp.com/attachments/723180241140318278/732666213263474889/unknown.png" alt="wordpresspanel" /></p>

<p>In there, I enumerated further for more Informations. I found another User called <strong>michi05654</strong>. Turns out that this User (Subscriber) wasnt relevant.</p>

<p>Since I got Access to the Plugin Manager, I simply uploaded a <a href="http://pentestmonkey.net/tools/web-shells/php-reverse-shell">PHP Reverse Shell Script</a>. 
Now there were two ways, either I uploaded a completley new Plugin or I change a existing one. I setted up a Netcat Listener on Port 4444, edited an existing Plugin and successfully
got a Reverse Shell. 
<img src="https://cdn.discordapp.com/attachments/723180241140318278/732673375519899749/unknown.png" alt="netcat" /></p>

<p>As we can see, we are a Daemon. A Daemon is  a process that runs in the background and performs a specified operation at predefined times or in response to certain events. 
I imported Python and spawned the Bash Shell with the following Command:</p>

<p><img src="https://cdn.discordapp.com/attachments/723180241140318278/732676093378560100/unknown.png" alt="shell" /></p>

:ET